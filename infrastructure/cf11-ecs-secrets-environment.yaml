AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for the ChemTrack secrets API container'

Parameters:
  AppName:
    Type: String
    Default: "chemtrack"
    Description: Name of the application 
  AppURL:
    Type: String
    Description: root application url
    Default: "chemtrack.767397980456.aws.glpoly.net"
  DesiredCount:
    Type: Number
    Default: 1
    Description: Desired count of containers
  VpcId:
    Type: String
    Description: VPC ID where the ECS cluster will be deployed
    Default: vpc-019e35a7f8ca205e5
  PrivateSubnet1:
    Type: String
    Description: First private subnet ID for the ECS cluster
    Default: subnet-08de8ae010ebfa1f3
  PrivateSubnet2:
    Type: String
    Description: Second private subnet ID for the ECS cluster
    Default: subnet-0205ddf1053073b5c

Resources:
  # Security Group specific for the secrets service for extra protection
  SecretsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for secrets API - restricts access to internal services only
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8099
          ToPort: 8099
          # Allow traffic from the main ECS security group
          SourceSecurityGroupId: !ImportValue 
            Fn::Sub: "${AppName}-ecs-security-group-id"
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-secrets-security-group"

  # Task Definition
  SecretsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${AppName}-secrets"
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue 
        Fn::Sub: "${AppName}-ecs-task-execution-role-arn"
      TaskRoleArn: !ImportValue 
        Fn::Sub: "${AppName}-ecs-task-role-arn"
      ContainerDefinitions:
        - Name: !Sub "${AppName}-secrets-container"
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/secrets:latest"
          Essential: true
          PortMappings:
            - Name: secrets-map
              ContainerPort: 8099
              HostPort: 8099
              Protocol: http
              AppProtocol: http
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub "/ecs/${AppName}-secrets"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: API_KEY_PARAM_NAME
              Value: !Sub "${AppName}-api-key"
            - Name: AWS_REGION
              Value: !Ref AWS::Region

  # CloudWatch Logs Group
  SecretsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${AppName}-secrets"
      RetentionInDays: 14

  # ECS Service
  SecretsService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${AppName}-secrets-service"
      Cluster: !ImportValue 
        Fn::Sub: "${AppName}-cluster-name"
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !Ref DesiredCount
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref SecretsSecurityGroup
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2
      TaskDefinition: !Ref SecretsTaskDefinition
      ServiceConnectConfiguration:
        Enabled: true
        Namespace: !Sub ${AppName}.local
        Services:
          - PortName: secrets-map
            DiscoveryName: chemtrack-secrets
            ClientAliases:
              - Port: 80

Outputs:
  SecretsServiceArn:
    Description: ARN of the secrets service
    Value: !Ref SecretsService
    Export:
      Name: !Sub "${AppName}-secrets-service-arn"

