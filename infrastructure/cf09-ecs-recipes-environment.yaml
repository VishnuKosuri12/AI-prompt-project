AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for the ChemTrack recipes container'

Parameters:
  AppName:
    Type: String
    Default: "chemtrack"
    Description: Name of the application 
  AppURL:
    Type: String
    Description: root application url
    Default: "chemtrack.767397980456.aws.glpoly.net"
  DesiredCount:
    Type: Number
    Default: 1
    Description: Desired count of containers
  VpcId:
    Type: String
    Description: VPC ID where the ECS cluster will be deployed
    Default: vpc-019e35a7f8ca205e5
  PrivateSubnet1:
    Type: String
    Description: First private subnet ID for the ECS cluster
    Default: subnet-08de8ae010ebfa1f3
  PrivateSubnet2:
    Type: String
    Description: Second private subnet ID for the ECS cluster
    Default: subnet-0205ddf1053073b5c

Resources:
  # Task Definition
  RecipesTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${AppName}-recipes"
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue 
        Fn::Sub: "${AppName}-ecs-task-execution-role-arn"
      TaskRoleArn: !ImportValue 
        Fn::Sub: "${AppName}-ecs-task-role-arn"
      ContainerDefinitions:
        - Name: !Sub "${AppName}-recipes-container"
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/recipes:latest"
          Essential: true
          PortMappings:
            - ContainerPort: 8000
              HostPort: 8000
              Protocol: tcp
          Environment:
            - Name: BASE_URL
              Value: !Ref AppURL
            - Name: SECRET_KEY
              Value: '64df77320c1b5b56396028e0dfc01deb'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub "/ecs/${AppName}-recipes"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  # CloudWatch Logs Group
  RecipesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${AppName}-recipes"
      RetentionInDays: 14

  # ECS Service
  RecipesService:
    Type: AWS::ECS::Service
    DependsOn: RecipesListenerRule
    Properties:
      ServiceName: !Sub "${AppName}-recipes-service"
      Cluster: !ImportValue 
        Fn::Sub: "${AppName}-cluster-arn"
      TaskDefinition: !Ref RecipesTaskDefinition
      LaunchType: FARGATE
      DesiredCount: !Ref DesiredCount
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !ImportValue 
              Fn::Sub: "${AppName}-ecs-security-group-id"
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2
      LoadBalancers:
        - ContainerName: !Sub ${AppName}-recipes-container
          ContainerPort: 8000
          TargetGroupArn: !Ref RecipesTargetGroup
      HealthCheckGracePeriodSeconds: 60
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-recipes-service
      ServiceConnectConfiguration:
        Enabled: true
        Namespace: !Sub ${AppName}.local

  # Target Group
  RecipesTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${AppName}-recipes-tg"
      Port: 8000
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-recipes-tg

  # Listener Rule
  RecipesListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref RecipesTargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - /recipes*
      ListenerArn: !ImportValue 
        Fn::Sub: "${AppName}-https-listener-arn"
      Priority: 70

Outputs:
  RecipesServiceArn:
    Description: ARN of the recipes service
    Value: !Ref RecipesService
    Export:
      Name: !Sub "${AppName}-recipes-service-arn"

  RecipesTargetGroupArn:
    Description: ARN of the recipes target group
    Value: !Ref RecipesTargetGroup
    Export:
      Name: !Sub "${AppName}-recipes-target-group-arn"
